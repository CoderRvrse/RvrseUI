{
  "version": {
    "major": 4,
    "minor": 3,
    "patch": 1,
    "full": "4.3.1",
    "build": "20251020c",
    "hash": "V6N8R1C7",
    "channel": "Stable"
  },
  "release": {
    "date": "2025-10-20",
    "name": "Lucide Icon System Refresh",
    "codename": "Neon Atlas",
    "notes": "Lucide sprite sheet embedded everywhere: Tabs, Notifications, Buttons, Labels, and docs demos render pixel-perfect icons with automatic Unicode fallbacks. Adds rbxassetid image support to the icon resolver and refreshes README/CLAUDE guidance for the end-to-end workflow. Profiles manager now runs on the modern dropdown system with a dedicated QA harness."
  },
  "compatibility": {
    "roblox": "Latest",
    "luau": "0.6+",
    "mobile": true,
    "tablet": true,
    "desktop": true,
    "console": false
  },
  "features": {
    "notification_control": true,
    "theme_switcher": true,
    "close_button": true,
    "lock_groups": true,
    "glassmorphism": true,
    "animations": true,
    "tooltips": true,
    "mobile_responsive": true,
    "drag_to_move": true,
    "unicode_icons": true,
    "lucide_icons": true,
    "flags_system": true,
    "complete_elements": true,
    "configuration_saving": true,
    "auto_save": true,
    "dynamic_obfuscation": true
  },
  "changelog": {
    "4.3.1": {
      "date": "2025-10-20",
      "hash": "V6N8R1C7",
      "changes": [
        "🎮 Controller chip now uses the Lucide icon resolver—supports `lucide://`, emoji, `rbxassetid://`, or numeric IDs with automatic Unicode fallback.",
        "🪄 New APIs: `RvrseUI:SetTokenIcon` / `GetTokenIcon` and `Window:SetTokenIcon` / `GetTokenIcon` for per-hub or per-window customization.",
        "🎨 Theme-friendly tinting with optional color overrides; fallbacks remain visible even if the sprite sheet fails to load.",
        "📘 README updated with token customization examples plus refreshed badges/build stats.",
        "🧾 Version metadata bumped to v4.3.1 (build 20251020c) for release tracking."
      ]
    },
    "4.3.0": {
      "date": "2025-10-20",
      "hash": "P7R1L8Z3",
      "changes": [
        "🪄 Lucide icons now render across ALL UI elements (Tabs, Notifications, Buttons, Labels) with consistent spacing and dedicated icon holders.",
        "🖼️ Added rbxassetid:// image support to IconResolver so Roblox-hosted sprites render alongside lucide:// and emoji schemes.",
        "🧩 Buttons and Labels reserve a 24px icon lane with dynamic padding that prevents overlap when fallbacks or emojis are used.",
        "🧵 Lucide sprite data is embedded into RvrseUI.lua and init build so executors load the sheet without extra HTTP calls.",
        "🧪 Refreshed examples/test-lucide-icons.lua to showcase Buttons, Labels, Notifications, and Roblox asset icons in one scene.",
        "📚 README.md now ships with a dedicated Lucide Icon System section, updated quick-start badges, and direct example links.",
        "🗒️ CLAUDE.md gains a developer log plus advanced guidance for regenerating lucide sprites and wiring new icons.",
        "🔖 VERSION metadata updated for v4.3.0 (build 20251020b, codename \"Neon Atlas\").",
        "🪟 Minimize/restore flow tweaked so the window reopens from the controller chip at the exact saved position.",
        "🧰 Profiles tab now leverages the modern dropdown with single-select guards and ships with `examples/test-config-profiles.lua` for regression testing."
      ]
    },
    "4.2.0": {
      "date": "2025-10-18",
      "hash": "L6I9C3U5",
      "changes": [
        "🎨 LUCIDE ICON LIBRARY INTEGRATION - 500+ professional icons via lucide:// protocol!",
        "✨ NEW: LucideIcons.lua module (287 lines) - Lucide icon resolution with Unicode fallbacks",
        "🔍 Icon resolution chain: Asset map → Unicode fallback → Text display",
        "📦 100+ Unicode fallbacks pre-mapped for common icons (home, settings, arrows, etc.)",
        "🚀 Zero setup required - works immediately with automatic fallbacks",
        "🎯 Advanced: Upload custom Lucide SVGs as Roblox assets and map in LucideIcons.AssetMap",
        "🔧 5 icon formats supported: lucide://, icon://, emoji, rbxassetid://, asset ID number",
        "📚 Icons.lua enhanced with lucide:// protocol support",
        "🌐 HttpService integration for future SVG fetching capabilities",
        "📖 Complete documentation: docs/LUCIDE_ICONS_GUIDE.md (347 lines)",
        "🧪 Two example scripts: test-lucide-icons.lua (308 lines), test-lucide-simple.lua (71 lines)",
        "🔨 Build system updated: Added LucideIcons to module order + HttpService to services",
        "📊 Module count: 28 → 29 (+1 LucideIcons)",
        "📈 File size: 264 KB → 272 KB (+8 KB for icon system)",
        "✅ ORGANIC PARTICLE SYSTEM - 'Spore Bubble' floating particles with Perlin noise drift!",
        "🎨 NEW: Particles.lua module (698 lines) - Complete Perlin noise implementation for organic motion",
        "🌊 Perlin noise 3D with octave layering - particles drift with lateral curl (no straight lines)",
        "🫧 Size distribution: 60% small (3-8px), 30% medium (9-16px), 10% large (18-28px bubbles)",
        "🎭 Opacity range: 0.15-0.35 base with cubic easing (in: t³, out: 1-(1-t)³)",
        "⏱️ Lifetime: 2.8-5.2s random, fade in 120-180ms, fade out 180-220ms",
        "🎯 Motion: Base upward 20-45 px/s + Perlin lateral drift ±8-18 px/s + vertical noise ±6 px/s",
        "🎨 HSL color jitter: ±6° hue, ±8% lightness from theme accent for variety",
        "♻️ Object pooling: Zero per-frame allocation, particles reused from pool",
        "📊 Adaptive density: 40-80 desktop, 20-40 mobile, auto-reduces if FPS < 50",
        "🎬 State-driven spawning: 'expand' (+30% burst), 'idle' (10% trickle), 'dragging' (50% throttle)",
        "⚡ RunService heartbeat updates - <0.8ms render budget per frame",
        "🔧 Configurable: Particles.Enabled, Density (low/med/high), Blend (alpha/additive)",
        "🪟 Integrated with WindowBuilder: plays on show/restore, stops on minimize, throttles on drag",
        "📦 Module count: 28 (up from 27) +1 Particles module",
        "📈 File size: 264 KB (up from 247 KB, +17 KB for complete Perlin noise system)"
      ]
    },
    "4.1.0": {
      "date": "2025-10-18",
      "hash": "U7M5D3W9",
      "changes": [
        "🎯 UNIFIED DROPDOWN SYSTEM - Major architectural cleanup!",
        "🗑️ Removed DropdownLegacy.lua (404 lines) - eliminated broken single-select system",
        "✂️ Cleaned Dropdown.lua - removed ALL single-select logic and Rayfield compatibility code (reduced from 1021 to 801 lines)",
        "🔧 Updated SectionBuilder.lua - CreateDropdown() now ALWAYS uses modern multi-select system (removed UseModernDropdown flag)",
        "📦 Module count: 27 (down from 28) - cleaner codebase",
        "📉 File size: 246 KB (down from 260 KB - 5% smaller!)",
        "📊 Net code reduction: 1,459 lines deleted (-1775 deletions, +316 additions)",
        "✅ Modern multi-select is now the ONLY dropdown system - users select one OR multiple items by clicking",
        "🎨 Checkbox interface - visual checkboxes for all dropdown items",
        "🚫 Removed ALL Rayfield compatibility code and documentation",
        "📝 Updated README.md - removed 'Single-Select vs Multi-Select' confusion, clarified unified system",
        "🧹 Deleted TEST_DROPDOWN_LONG_LABELS.lua (166 lines) - broken test file",
        "🔄 Updated build.js and build.lua - removed DropdownLegacy from pipeline",
        "📚 Updated all documentation to reflect unified system (README, badges, version info)",
        "🎯 API CONSISTENCY: OnChanged ALWAYS receives a table (e.g., {'Item1', 'Item2'})",
        "✨ Dynamic overlay rendering - dropdowns always appear above all other UI",
        "🛡️ No ZIndex issues - proper DisplayOrder calculation ensures topmost rendering",
        "🔧 Breaking Changes: NONE - existing code continues to work (backwards compatible)"
      ]
    },
    "4.0.4": {
      "date": "2025-10-18",
      "hash": "R9B4K3X7",
      "changes": [
        "🎯 CRITICAL FIX: Complete drag system rewrite - back to basics!",
        "🐛 ROOT CAUSE: Overcomplicated drag logic with AbsolutePosition/AnchorPoint math introduced offset bugs",
        "✨ SOLUTION: Replaced ~600 lines of complex code with ~140 lines of classic Roblox drag pattern",
        "📐 Simple delta calculation: delta = currentPosition - startPosition, apply to original UDim2",
        "🪟 Window header drag now uses basic InputBegan → store start → calculate delta pattern",
        "🎮 Controller chip drag simplified to same pattern - no offset calculations needed",
        "🚫 Removed: AbsolutePosition math, GUI inset handling, AnchorPoint conversions, coordinate space mixing",
        "🚫 Removed: Size locking system, hover animation blocking, complex pointer tracking",
        "✅ Kept: Animation blocking (isAnimating flag) to prevent drag during minimize/restore tweens",
        "📊 Code reduction: 65% smaller (400 lines → 140 lines)",
        "🎯 User confirmed: 'that was it that was the fix back to the basics!'",
        "📝 Created SIMPLE_DRAG_REFERENCE.lua as reference for future drag implementations",
        "📚 Created DRAG_FIX_PROPOSAL.md documenting architectural analysis",
        "🧪 Verified: No jumps, no offset drift, cursor stays glued to grab point"
      ]
    },
    "4.0.3": {
      "date": "2025-10-17",
      "hash": "P8X4N7Q2",
      "changes": [
        "🎉 CRITICAL FIX: Multi-select dropdown blocker now works perfectly!",
        "🐛 ROOT CAUSE: Lua closure upvalue capture bug - closures capture VALUES not references",
        "🔧 Wrapper function closeDropdown() captured setOpen as nil at definition time",
        "✅ SOLUTION: Use inline anonymous functions at connection point (inside setOpen body)",
        "📊 Evidence: Logs showed setOpen was 'function' when connecting, 'nil' when handler fired",
        "🧪 Test confirms fix: Blocker clicks now close dropdown successfully",
        "🔍 Added comprehensive debug logging to track exact blocker click flow",
        "📝 Documented Lua closure scoping bug in CLAUDE.md (Warning #3)",
        "🔢 Build number properly incremented to 20251017b"
      ]
    },
    "4.0.2": {
      "date": "2025-10-17",
      "hash": "D3F7K9M2",
      "changes": [
        "🐛 CRITICAL FIX: Modern Dropdown multi-select blocker close crash",
        "🔧 Fixed forward-declaration scoping issue in Dropdown.lua",
        "⚡ Added 'local setOpen' forward declaration before showOverlayBlocker()",
        "✅ Multi-select dropdowns now close properly when clicking outside",
        "🎯 BLOCKER FIX: Set Modal=false and Active=false in Overlay:ShowBlocker",
        "🔧 Dropdown.lua and ColorPicker.lua now explicitly pass Modal=false",
        "📝 Documented that DropdownLegacy does NOT support multi-select",
        "🧪 Updated test suite to reflect Legacy Dropdown limitations",
        "🚨 Error fixed: ':3853: attempt to call a nil value' when closing multi-select",
        "🖱️ Blocker click events now fire correctly (was blocked by Active=true)"
      ]
    },
    "4.0.1": {
      "date": "2025-10-17",
      "hash": "C9P2X5L8",
      "changes": [
        "🎨 ColorPicker Phase 2 - Advanced mode fixes (RGB/HSV sliders + Hex input)",
        "🔧 Fixed Overlay module missing from build pipeline - was never compiled into monolith",
        "🐛 Fixed ColorPicker panel visibility issues (ClipsDescendants, parenting, transparency)",
        "⚡ Optimized slider callbacks - only fire on user interaction, not programmatic updates",
        "📊 Added comprehensive GUI architecture documentation (UI-ARCHITECTURE.md, DEBUGGING-WORKFLOW.md)",
        "🛠️ Created GUI inspector tools (visual + console-based) for debugging layer issues",
        "🎯 Added visual debug test with color-coded layers for troubleshooting blocker issues",
        "📝 Enhanced debug logging throughout ColorPicker and Overlay modules"
      ]
    },
    "4.0.0": {
      "date": "2025-10-10",
      "hash": "V8N3X7C2",
      "changes": [
        "🎨 COMPLETE VISUAL REDESIGN - Vibrant cyberpunk neon aesthetic (Purple→Pink→Cyan gradients everywhere)",
        "🌈 New Theme.lua v4.0 - Electric purple, hot magenta, cyber cyan palette with 50+ new color variants",
        "🎬 Enhanced Animator.lua v4.0 - 8 animation presets (Butter, Lightning, Glide, Spring, Pop, Expo, Snappy, Bounce)",
        "✨ 5 new animation effects - Shimmer (sweeping highlight), Pulse (scale), Glow (dynamic stroke), SlideIn, FadeIn",
        "🔘 Button.lua v4.0 - Gradient background + 4 simultaneous effects (ripple + shimmer + pulse + border flash)",
        "🔀 Toggle.lua v4.0 - Modern iOS-style switch with gradient track and glowing thumb (56×30px)",
        "📏 Slider.lua v4.0 - Gradient fill bar, growing/glowing thumb (22px→28px when dragging)",
        "⌨️ TextBox.lua v4.0 - Gradient underline expands from center on focus + glowing border",
        "🎹 Keybind.lua v4.0 - Gradient background activates during key capture mode",
        "🎨 ColorPicker.lua v4.0 - Circular preview (40×40px) with glow effects and pulse animation",
        "📝 Label.lua v4.0 - Minimal refinement with better spacing",
        "🪟 WindowBuilder.lua v4.0 - Animated rotating gradient border (360° continuous) + gradient topbar",
        "📱 TabBuilder.lua v4.0 - Icon-only vertical rail (80px wide, down from 176px) with centered icons",
        "🎯 Tab active state - Gradient overlay + glowing 2px border + 4px indicator line with Spring animation",
        "❌ Removed Light theme - Focus on one perfect dark theme with vibrant colors",
        "📦 File size: 187 KB (only +13 KB for complete redesign, 7.5% increase)"
      ]
    },
    "3.0.4": {
      "date": "2025-10-10",
      "hash": "K7M3P9X1",
      "changes": [
        "🎯 Redesigned window header drag to cache exact grab offset and maintain cursor lock throughout drag operations.",
        "🎮 Upgraded controller chip drag with grab-point preservation using AnchorPoint-optimized positioning.",
        "📐 Added sub-pixel precision rounding (math.floor + 0.5) to both drag systems for smooth movement.",
        "🔍 Implemented consistent UI-space coordinate calculations with proper GUI inset handling for all host types.",
        "🖱️ Unified touch and mouse input support with active input tracking to prevent cross-contamination.",
        "🐛 Fixed drag offset drift issues that caused cursor to slip away from initial grab point.",
        "📝 Added debug logging for drag offset caching and position tracking when debug mode enabled.",
        "📦 Embedded the init bootstrap in the monolith build and updated README/CLAUDE guidance to keep `src/` and the bundled file aligned.",
        "📚 Comprehensive CLAUDE.md rewrite documenting architecture, build system, common pitfalls, troubleshooting, and AI assistant guidelines."
      ]
    },
    "3.0.3": {
      "date": "2025-10-11",
      "hash": "N8P4Q6R2",
      "changes": [
        "💾 Added configurable auto-save toggle so manual loads can restore snapshots without immediate overwrites.",
        "🧷 Guarded minimization chip drag against inset/viewport drift for precise cursor alignment.",
        "🎛️ Hardened hotkey listeners to avoid duplicate bindings and keep destroy/toggle keys reliable.",
        "📚 Documented maintainer rules for persistence and new AutoSave option across README/CLAUDE notes.",
        "📂 Injected an in-app Profiles tab for listing, saving, loading, and deleting configuration files.",
        "📝 Refreshed README/CLAUDE documentation to capture overlay dropdowns and profile management workflows."
      ]
    },
    "3.0.2": {
      "date": "2025-10-10",
      "hash": "Z4X7C2V1",
      "changes": [
        "🧠 Routed configuration save/load through the active RvrseUI instance so element flags serialize correctly.",
        "🪝 Restored last-profile folder/file parsing for boolean ConfigurationSaving setups.",
        "🎨 Theme cache now syncs back to the live UI context during loads, ensuring visual state matches disk.",
        "📄 Updated docs and build scripts to advertise v3.0.2 hotfix release."
      ]
    },
    "3.0.1": {
      "date": "2025-10-10",
      "hash": "Q1W2E3R4",
      "changes": [
        "🐛 Fixed configuration initialization so logging hooks exist prior to save/load calls.",
        "🔁 Restored auto-load profile detection so last saved configs reattach folder and filename correctly.",
        "⚙️ Ensured Config module receives State/Theme dependencies during bootstrap to eliminate nil reference errors.",
        "📄 Updated documentation and build headers to reflect v3.0.1 release metadata."
      ]
    },
    "3.0.0": {
      "date": "2025-10-09",
      "hash": "M6D8A3L1",
      "changes": [
        "🧹 Removed legacy test/demo scripts and retired outdated harnesses.",
        "🧪 Added TEST_ALL_FEATURES.lua – single master suite covering 12 elements, notifications, locks, theme toggles, and config workflow.",
        "📝 Rebuilt README.md and CLAUDE.md to match the modular architecture and new testing flow.",
        "📚 Updated ancillary guides (STATUS.md, TESTING_GUIDE.md, build instructions) to point at the new workflow."
      ]
    },
    "2.13.0": {
      "date": "2025-10-02",
      "hash": "D8Y2K5M3",
      "changes": [
        "🔧 WINDOW:SHOW() METHOD - Proper Config Loading!",
        "✅ Config now loads after elements exist (Window:Show()).",
        "✅ Hotkey and element state persistence restored.",
        "📋 Usage: Create window, build UI, then call Window:Show()."
      ]
    },
    "2.12.2": {
      "date": "2025-10-02",
      "hash": "C7X4N9L2",
      "changes": [
        "👻 Invisible pre-load system prevents flash of default values.",
        "✅ Splash screen handles config load then reveals UI.",
        "🎯 Perfect first-frame experience for saved layouts."
      ]
    }
  },
  "download": {
    "url": "https://raw.githubusercontent.com/CoderRvrse/RvrseUI/main/RvrseUI.lua",
    "size_kb": 434,
    "format": "lua"
  },
  "repository": {
    "url": "https://github.com/CoderRvrse/RvrseUI",
    "issues": "https://github.com/CoderRvrse/RvrseUI/issues",
    "license": "MIT"
  }
}
